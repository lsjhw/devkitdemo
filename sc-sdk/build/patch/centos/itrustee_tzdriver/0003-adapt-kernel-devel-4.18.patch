Subject: [PATCH] adapt kernel devel 4.18
---
Index: 0002-add-gcc-and-kernel-version-matching-judgement.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/0002-add-gcc-and-kernel-version-matching-judgement.patch b/0002-add-gcc-and-kernel-version-matching-judgement.patch
new file mode 100644
--- /dev/null	(revision 3600bb022b22c32a10474aa8693c60bb7f326fb5)
+++ b/0002-add-gcc-and-kernel-version-matching-judgement.patch	(revision 3600bb022b22c32a10474aa8693c60bb7f326fb5)
@@ -0,0 +1,125 @@
+From b0fbae89a6667d050a4301601035cf1aa76f6571 Mon Sep 17 00:00:00 2001
+From: huangyongtao1 <hyt3161@163.com>
+Date: Tue, 13 Sep 2022 11:11:32 +0800
+Subject: [PATCH] add gcc and kernel version matching judgement.
+
+---
+ ...dd-link-to-so-and-update-kernel-path.patch | 78 +++++++++++++++++++
+ Makefile                                      | 14 +++-
+ 2 files changed, 91 insertions(+), 1 deletion(-)
+ create mode 100644 0001-add-link-to-so-and-update-kernel-path.patch
+
+diff --git a/0001-add-link-to-so-and-update-kernel-path.patch b/0001-add-link-to-so-and-update-kernel-path.patch
+new file mode 100644
+index 0000000..1315142
+--- /dev/null
++++ b/0001-add-link-to-so-and-update-kernel-path.patch
+@@ -0,0 +1,78 @@
++From e654173ae98203423f8fef137171b0da6c63a70d Mon Sep 17 00:00:00 2001
++From: huangyongtao1 <hyt3161@163.com>
++Date: Fri, 19 Aug 2022 15:41:12 +0800
++Subject: [PATCH] add link to so and update kernel path
++
++---
++ CMakeLists.txt | 13 ++++++++++++-
++ Makefile       |  3 ++-
++ README.en.md   |  1 +
++ README.md      |  1 +
++ 4 files changed, 16 insertions(+), 2 deletions(-)
++
++diff --git a/CMakeLists.txt b/CMakeLists.txt
++index cd58879..9a87938 100644
++--- a/CMakeLists.txt
+++++ b/CMakeLists.txt
++@@ -21,11 +21,22 @@ endif()
++ 
++ # you should config right path according to your run-time environment
++ set(KPATH /usr/src/kernels)
++-execute_process(COMMAND ls ${KPATH} OUTPUT_VARIABLE KDIR)
+++execute_process(COMMAND rpm -qa|grep kernel-devel | head -n 1 | awk -F "kernel-devel-" '{print $$2}' OUTPUT_VARIABLE KDIR)
+++
++ # Remove the last char \n
++ string(STRIP ${KDIR} KDIR)
++ set(KERNEL_DIR ${KPATH}/${KDIR})
++ 
+++# Add header file include directories
+++include_directories(
+++    ./
+++    ./libboundscheck/include
+++    ./auth
+++    ./core
+++    ./tlogger
+++    ./kthread_affinity
+++)
+++
++ # Set extra options
++ set(CMAKE_EXTRA_FLAGS "-fstack-protector-strong -DCONFIG_TEELOG -DCONFIG_TZDRIVER_MODULE -DCONFIG_TEECD_AUTH -DCONFIG_PAGES_MEM=y -DCONFIG_AUTH_ENHANCE -DCONFIG_CLOUDSERVER_TEECD_AUTH")
++ set(CMAKE_EXTRA_FLAGS "${CMAKE_EXTRA_FLAGS} -DCONFIG_CPU_AFF_NR=0 -DCONFIG_BIG_SESSION=1000 -DCONFIG_NOTIFY_PAGE_ORDER=4 -DCONFIG_512K_LOG_PAGES_MEM")
++diff --git a/Makefile b/Makefile
++index 253938d..d6af3f3 100644
++--- a/Makefile
+++++ b/Makefile
++@@ -18,7 +18,8 @@ endif
++ 
++ # you should config right path according to your run-time environment
++ KPATH := /usr/src/kernels
++-KDIR  := $(KPATH)/$(shell ls $(KPATH))
+++KERNEL_VERSION := $(shell rpm -qa|grep kernel-devel | head -n 1 | awk -F "kernel-devel-" '{print $$2}')
+++KDIR  := $(KPATH)/$(KERNEL_VERSION)
++ 
++ EXTRA_CFLAGS += -fstack-protector-strong -DCONFIG_TEELOG -DCONFIG_TZDRIVER_MODULE -DCONFIG_TEECD_AUTH -DCONFIG_PAGES_MEM=y -DCONFIG_AUTH_ENHANCE -DCONFIG_CLOUDSERVER_TEECD_AUTH
++ EXTRA_CFLAGS += -I$(PWD)/libboundscheck/include/ -I$(PWD) -I$(PWD)/auth -I$(PWD)/core
++diff --git a/README.en.md b/README.en.md
++index 0fb93ed..cdab479 100644
++--- a/README.en.md
+++++ b/README.en.md
++@@ -28,6 +28,7 @@ then you will see tzdriver.ko under the folder "tzdriver"
++ 2) # insmod tzdriver.ko
++ 3) # /usr/bin/teecd &
++ 4) run any CA
+++5) If you want to detele tzdriver after installing it, you need to reboot the server.
++ 
++ 5.License
++ please see License/Tzdriver_License for more details
++diff --git a/README.md b/README.md
++index 37198d0..faf8b11 100644
++--- a/README.md
+++++ b/README.md
++@@ -26,3 +26,4 @@ iTrustee OS 非安全侧driver，支持与iTrustee OS通信
++    2.使用root用户，执行insmod tzdriver.ko
++    3.使用root用户，执行/usr/bin/teecd&
++    4.运行测试CA 和TA
+++   5.如果要卸载tzdriver，需要重启服务器才可生效
++-- 
++2.36.1.windows.1
++
+diff --git a/Makefile b/Makefile
+index d6af3f3..2fc9fea 100644
+--- a/Makefile
++++ b/Makefile
+@@ -18,9 +18,21 @@ endif
+ 
+ # you should config right path according to your run-time environment
+ KPATH := /usr/src/kernels
+-KERNEL_VERSION := $(shell rpm -qa|grep kernel-devel | head -n 1 | awk -F "kernel-devel-" '{print $$2}')
++KERNEL_VERSION := $(shell rpm -qa|grep kernel-devel | sort | head -n 1 | awk -F "kernel-devel-" '{print $$2}')
+ KDIR  := $(KPATH)/$(KERNEL_VERSION)
+ 
++GCC_VERSION := $(shell expr `gcc -dumpversion | cut -f1 -d.`)
++GCC_VERSION_LIST := 2 3 4 5 6 7 8 9
++GCC_MATCH := $(findstring $(GCC_VERSION), $(GCC_VERSION_LIST))
++
++
++KERNEL_VERSION_LIST := 4.18.0-305.10.2.el7.aarch64 4.18.0-348.20.1.el7.aarch64
++KERNEL_MATCH := $(findstring $(KERNEL_VERSION), $(KERNEL_VERSION_LIST))
++
++ifeq ("$(GCC_VERSION)_$(KERNEL_VERSION)", "$(GCC_MATCH)_$(KERNEL_MATCH)")
++    $(error "Require gcc version >= 10.")
++endif
++
+ EXTRA_CFLAGS += -fstack-protector-strong -DCONFIG_TEELOG -DCONFIG_TZDRIVER_MODULE -DCONFIG_TEECD_AUTH -DCONFIG_PAGES_MEM=y -DCONFIG_AUTH_ENHANCE -DCONFIG_CLOUDSERVER_TEECD_AUTH
+ EXTRA_CFLAGS += -I$(PWD)/libboundscheck/include/ -I$(PWD) -I$(PWD)/auth -I$(PWD)/core
+ EXTRA_CFLAGS += -I$(PWD)/tlogger -I$(PWD)/kthread_affinity
+-- 
+2.36.1.windows.1
+
Index: core/gp_ops.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core/gp_ops.c b/core/gp_ops.c
--- a/core/gp_ops.c	(revision fc7296ea560cb432146b0c80daa8ae0db4457692)
+++ b/core/gp_ops.c	(revision 3600bb022b22c32a10474aa8693c60bb7f326fb5)
@@ -158,7 +158,8 @@
 	uint64_t buffer_addr = client_param->memref.buffer |
 		((uint64_t)client_param->memref.buffer_h_addr << ADDR_TRANS_NUM);
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) || \
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) && \
+    LINUX_VERSION_CODE != KERNEL_VERSION(4, 18, 0)) || \
 	LINUX_VERSION_CODE == KERNEL_VERSION(4, 19, 71))
 	if (access_ok(VERIFY_READ, (void *)(uintptr_t)size_addr, sizeof(uint32_t)) == 0)
 #else
@@ -168,7 +169,8 @@
 
 	get_user(size, (uint32_t *)(uintptr_t)size_addr);
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) || \
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) && \
+    LINUX_VERSION_CODE != KERNEL_VERSION(4, 18, 0)) || \
 	LINUX_VERSION_CODE == KERNEL_VERSION(4, 19, 71))
 	if (access_ok(VERIFY_READ, (void *)(uintptr_t)buffer_addr, size) == 0)
 #else
@@ -186,7 +188,8 @@
 	uint64_t b_addr = client_param->value.b_addr |
 		((uint64_t)client_param->value.b_h_addr << ADDR_TRANS_NUM);
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) || \
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) && \
+    LINUX_VERSION_CODE != KERNEL_VERSION(4, 18, 0)) || \
 	LINUX_VERSION_CODE == KERNEL_VERSION(4, 19, 71))
 	if (access_ok(VERIFY_READ, (void *)(uintptr_t)a_addr, sizeof(uint32_t)) == 0)
 #else
@@ -194,7 +197,8 @@
 #endif
 		return false;
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) || \
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) && \
+    LINUX_VERSION_CODE != KERNEL_VERSION(4, 18, 0)) || \
 	LINUX_VERSION_CODE == KERNEL_VERSION(4, 19, 71))
 	if (access_ok(VERIFY_READ, (void *)(uintptr_t)b_addr, sizeof(uint32_t)) == 0)
 #else
Index: tlogger/tlogger.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tlogger/tlogger.c b/tlogger/tlogger.c
--- a/tlogger/tlogger.c	(revision fc7296ea560cb432146b0c80daa8ae0db4457692)
+++ b/tlogger/tlogger.c	(revision 3600bb022b22c32a10474aa8693c60bb7f326fb5)
@@ -644,7 +644,8 @@
 
 static int check_user_arg(unsigned long arg, size_t arg_len)
 {
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) || \
+#if ((LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 18) && \
+    LINUX_VERSION_CODE != KERNEL_VERSION(4, 18, 0)) || \
 	LINUX_VERSION_CODE == KERNEL_VERSION(4, 19, 71))
 	return (int)access_ok(VERIFY_READ,
 		(void __user *)(uintptr_t)arg, arg_len);
